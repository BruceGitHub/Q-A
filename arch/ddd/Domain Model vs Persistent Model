---
layout: post
title: "Domain Model vs Persistent Model"
date: 2022-01-18
tags:
 - [orm]
 - [persistent model]
 - [domain model]
published: true
---

Query questions:
- Orm yes or orm no 

Some links:
- https://khorikov.org/posts/2020-12-15-domain-model-purity-and-orms-2/
- http://codebetter.com/gregyoung/2010/02/18/using-an-orm-is-like-kissing-your-sister/
- https://solveme.wordpress.com/2009/11/11/ddd-without-any-orm-tool-is-it-possible/
- https://enterprisecraftsmanship.com/posts/having-the-domain-model-separate-from-the-persistence-model
- https://ocramius.github.io/doctrine-best-practices/#/
- https://www.mehdi-khalili.com/orm-anti-patterns-series
  - https://www.mehdi-khalili.com/orm-anti-patterns-part-4-persistence-domain-model

My answer:
- The choice is always a trade-off, but if we work in a team the trade-off isn't only for the tech stack but also for the team knowledge
- In some cases, we cannot use orm when the domain is simple
